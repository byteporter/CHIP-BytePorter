/*
This file sets up SD Controller 2 and the NAND controller for use in U-Boot.
It used to be able to be built just by specifying it with
CONFIG_DEFAULT_DEVICE_TREE or passing it to make with the variable
DEVICE_TREE. However, since comimt a3444bd reverted the code that enabled
it to be built by make, I'm unsure what the recommended workflow is. As a
workaround, I pass it to make with the DEVICE_TREE variable and also pass
the variable dtb-y=sun5i-r8-chip-byteporter.dtb, which effectively declares
it as a target in arch/arm/dts/Makefile without actually modifying the
Makefile. I'll need to do some research (probably ask in IRC or the mailing
list) what the actual intended workflow is for this situation now.
*/

#include "sun5i-r8-chip.dts"

&mmc2 {
  pinctrl-names = "default";
  pinctrl-0 = <&mmc2_pins_b>;
  vmmc-supply = <&reg_vcc3v3>;
  vqmmc-supply = <&reg_vcc3v3>;
  bus-width = <4>;
  broken-cd;
  status = "okay";
};

&nfc {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&nand_pins_a>, <&nand_cs0_pins_a>, <&nand_rb0_pins_a>;
  
  nand@0 {
    reg = <0x0>;
    allwinner,rb = <0x0>;
    nand-ecc-mode = "hw";

    #address-cells = <2>;
    #size-cells = <2>;

    spl@0 {
      label = "SPL";
      reg = <0x0>, <0x0>, <0x0>, <0x00400000>;
    };
    spl-backup@0 {
      label = "SPL.backup";
      reg = <0x0>, <0x00400000>, <0x0>, <0x00400000>;
    };
    u-boot@0 {
      label = "U-Boot";
      reg = <0x0>, <0x00800000>, <0x0>, <0x00400000>;
    };
    u-boot-backup@0 {
      label ="U-Boot.backup";
      reg = <0x0>, <0x00c00000>, <0x0>, <0x00400000>;
    };
  };
};

&pio {
  mmc2_pins_b: mmc2@0 {
    pins = "PE4", "PE5", "PE6", "PE7", "PE8", "PE9";
    function = "mmc2";
    drive-strength = <30>;
    bias-pull-up;
  };
};

// Overlay from nextthingco/dip-pocket-common.dtsi (https://github.com/ntc-chip-revived/CHIP-dt-overlays/blob/master/nextthingco/dip-pocket-common.dtsi)
// These lines are necessary for the PocketCHIP shell to work properly.

/* Pinctrl changes */
&pio {
  chip_bl_en: chip_backlight_enable@0 {
    pins = "PD18";
    function = "gpio_out";
    drive = <SUN4I_PINCTRL_10_MA>;
    pull = <SUN4I_PINCTRL_NO_PULL>;
  };
};

/* Enable the PWM */
&pwm {
  pinctrl-names = "default";
  pinctrl-0 = <&pwm0_pins>;
  status = "okay";
};

/* And enable the backlight running on that PWM */
/ {
  backlight: backlight {
    compatible = "pwm-backlight";
    pwms = <&pwm 0 8000 1>;

    brightness-levels = <0 1 2 4 8 12 16 24 28 32 100>;
    default-brightness-level = <8>;

    pinctrl-names = "default";
    pinctrl-0 = <&chip_bl_en>;
    enable-gpios = <&pio 3 18 GPIO_ACTIVE_HIGH>;
  };
};

/* Enable the I2C1 bus and the keyboard */
&i2c1 {
  #address-cells = <1>;
  #size-cells = <0>;
  pinctrl-names = "default";
  pinctrl-0 = <&i2c1_pins_a>;
  status = "okay";

  keyboard: keyboard@34 {
    compatible = "ti,tca8418";
    reg = <0x34>;
    interrupt-parent = <&pio>;
    interrupts = <6 1 IRQ_TYPE_EDGE_FALLING>;

    keypad,num-rows = <6>;
    keypad,num-columns = <10>;
    keypad,autorepeat;
  };
};

/* Enable the touchscreen */
&rtp {
  touchscreen-inverted-x;
  touchscreen-inverted-y;
  allwinner,ts-attached;
};

/* Enable our panel */
/ {
  panel {
    #address-cells = <1>;
    #size-cells = <0>;
    compatible = "olimex,lcd-olinuxino-43-ts";
    backlight = <&backlight>;

    port@0 {
      reg = <0>;
      #address-cells = <1>;
      #size-cells = <0>;

      panel_input: endpoint@0 {
        reg = <0>;
        remote-endpoint = <&tcon0_out_panel>;
      };
    };
  };
};

/* Link the TCON with the panel */
&tcon0_out {
  #address-cells = <1>;
  #size-cells = <0>;

  tcon0_out_panel: endpoint@0 {
    reg = <0>;
    remote-endpoint = <&panel_input>;
  };
};

&tcon0 {
  pinctrl-names = "default";
  pinctrl-0 = <&lcd_rgb565_pins>;
};

/ {
  leds {
    leds_status: status {};
  };
};

/* PocketCHIP LED definition */
&leds_status {
  linux,default-trigger = "default-on";
};

// nextthingco/dip-pocket-v73.dts (https://github.com/ntc-chip-revived/CHIP-dt-overlays/blob/master/nextthingco/dip-pocket-v73.dts)
// Keyboard map for the PocketCHIP

#include <dt-bindings/input/input.h>

&keyboard {
	linux,keymap = <
			MATRIX_KEY(0, 0, 13)
			MATRIX_KEY(0, 1, KEY_1)
			MATRIX_KEY(0, 2, KEY_2)
			MATRIX_KEY(0, 3, KEY_3)
			MATRIX_KEY(0, 4, KEY_4)
			MATRIX_KEY(0, 5, KEY_5)
			MATRIX_KEY(0, 6, KEY_6)
			MATRIX_KEY(0, 7, KEY_7)
			MATRIX_KEY(0, 8, KEY_8)
			MATRIX_KEY(0, 9, KEY_9)

			MATRIX_KEY(1, 0, KEY_Q)
			MATRIX_KEY(1, 1, KEY_W)
			MATRIX_KEY(1, 2, KEY_E)
			MATRIX_KEY(1, 3, KEY_R)
			MATRIX_KEY(1, 4, KEY_T)
			MATRIX_KEY(1, 5, KEY_Y)
			MATRIX_KEY(1, 6, KEY_U)
			MATRIX_KEY(1, 7, KEY_I)
			MATRIX_KEY(1, 8, KEY_O)
			MATRIX_KEY(1, 9, KEY_P)

			MATRIX_KEY(2, 0, KEY_A)
			MATRIX_KEY(2, 1, KEY_S)
			MATRIX_KEY(2, 2, KEY_D)
			MATRIX_KEY(2, 3, KEY_F)
			MATRIX_KEY(2, 4, KEY_G)
			MATRIX_KEY(2, 5, KEY_H)
			MATRIX_KEY(2, 6, KEY_J)
			MATRIX_KEY(2, 7, KEY_K)
			MATRIX_KEY(2, 8, KEY_L)
			MATRIX_KEY(2, 9, KEY_ENTER)

			MATRIX_KEY(3, 0, KEY_TAB)
			MATRIX_KEY(3, 1, KEY_Z)
			MATRIX_KEY(3, 2, KEY_X)
			MATRIX_KEY(3, 3, KEY_C)
			MATRIX_KEY(3, 4, KEY_V)
			MATRIX_KEY(3, 5, KEY_B)
			MATRIX_KEY(3, 6, KEY_N)
			MATRIX_KEY(3, 7, KEY_M)
			MATRIX_KEY(3, 8, KEY_UP)
			MATRIX_KEY(3, 9, KEY_DOWN)

			MATRIX_KEY(4, 0, KEY_ESC)
			MATRIX_KEY(4, 1, KEY_RIGHTALT)
			MATRIX_KEY(4, 2, KEY_LEFTALT)
			MATRIX_KEY(4, 3, KEY_SPACE)
			MATRIX_KEY(4, 4, KEY_RIGHTCTRL)
			MATRIX_KEY(4, 5, KEY_SLASH)
			MATRIX_KEY(4, 6, KEY_RIGHTSHIFT)
			MATRIX_KEY(4, 8, KEY_LEFT)
			MATRIX_KEY(4, 9, KEY_RIGHT)

			MATRIX_KEY(5, 0, KEY_LEFTSHIFT)
			MATRIX_KEY(5, 1, KEY_0)
			MATRIX_KEY(5, 2, KEY_KPMINUS )
			MATRIX_KEY(5, 3, KEY_BACKSPACE)
			MATRIX_KEY(5, 4, KEY_DOT)
			>;
};
